{"ast":null,"code":"import ActorEditDialog from \"@/components/ActorEditDialog.vue\";\nimport { EventBus } from \"@/main\";\nexport default {\n  name: \"ActorAdminActions\",\n  props: {\n    actorName: {\n      type: String,\n      required: true\n    },\n    actorId: {\n      type: String,\n      required: true\n    }\n  },\n  components: {\n    ActorEditDialog\n  },\n  created() {\n    this.selectedActor.id = this.actorId;\n    this.selectedActor.name = this.actorName;\n  },\n  data: () => ({\n    actions: {\n      enable: {},\n      edit: {},\n      delete: {}\n    },\n    selectedActor: {\n      id: '',\n      name: ''\n    }\n  }),\n  methods: {\n    editActor(actor) {\n      EventBus.$emit('adminActions_actorEditDiag_adminPanel_editActor', this.selectedActor);\n    },\n    deleteActor(actor) {\n      console.log(actor);\n      this.axios.post(`/delete/${actor.id}`).then(res => {\n        if (res.status === 200) {\n          EventBus.$emit('alert', {\n            color: 'green',\n            type: 'success',\n            msg: res.data.message\n          });\n          EventBus.$emit('toActorGallery_reloadGallery');\n        }\n      }).catch(e => {\n        EventBus.$emit('alert', {\n          color: 'red',\n          type: 'error',\n          msg: e.response.data.message\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAyCA;AACA;AAEA;EACAA;EACAC;IACAC;MACAC;MACAC;IACA;IACAC;MACAF;MACAC;IACA;EACA;EACAE;IAAAC;EAAA;EACAC;IACA;IACA;EACA;EACAC;IACAC;MACAC;MACAC;MACAC;IACA;IACAC;MACAC;MACAf;IACA;EACA;EACAgB;IACAC;MACAC;IACA;IACAC;MACAC;MACA,WACAC,4BACAC;QACA;UACAJ;YACAK;YACApB;YACAqB;UACA;UACAN;QACA;MACA,GACAO;QACAP;UACAK;UACApB;UACAqB;QACA;MACA;IACA;EACA;AACA","names":["name","props","actorName","type","required","actorId","components","ActorEditDialog","created","data","actions","enable","edit","delete","selectedActor","id","methods","editActor","EventBus","deleteActor","console","post","then","color","msg","catch"],"sourceRoot":"src/components","sources":["ActorAdminActions.vue"],"sourcesContent":["<template>\n  <div>\n    <v-card\n    >\n      <v-card class=\"d-flex justify-lg-space-around pa-2 actionBgColor\" color=\"white\">\n        <v-btn\n            tile\n            out\n            icon\n            width=\"33%\"\n            class=\"mx-1\"\n            @click=editActor(selectedActor)\n        >\n          <v-icon>mdi-pencil-outline</v-icon>\n        </v-btn>\n        <v-divider vertical></v-divider>\n        <v-btn\n            tile\n            icon\n            width=\"33%\"\n            class=\"mx-1\"\n        >\n          <v-icon>mdi-window-close</v-icon>\n          <!--                <v-icon>mdi-check-outline</v-icon>-->\n        </v-btn>\n        <v-divider vertical></v-divider>\n        <v-btn\n            tile\n            icon\n            width=\"33%\"\n            class=\"mx-1\"\n            @click=deleteActor(selectedActor)\n        >\n          <v-icon>mdi-trash-can-outline</v-icon>\n        </v-btn>\n      </v-card>\n    </v-card>\n  </div>\n</template>\n\n<script>\nimport ActorEditDialog from \"@/components/ActorEditDialog.vue\";\nimport {EventBus} from \"@/main\";\n\nexport default {\n  name: \"ActorAdminActions\",\n  props: {\n    actorName: {\n      type: String,\n      required: true\n    },\n    actorId: {\n      type: String,\n      required: true\n    },\n  },\n  components: {ActorEditDialog},\n  created() {\n    this.selectedActor.id = this.actorId;\n    this.selectedActor.name = this.actorName;\n  },\n  data: () => ({\n    actions: {\n      enable: {},\n      edit: {},\n      delete: {},\n    },\n    selectedActor: {\n      id: '',\n      name: ''\n    }\n  }),\n  methods: {\n    editActor(actor){\n      EventBus.$emit('adminActions_actorEditDiag_adminPanel_editActor',this.selectedActor);\n    },\n    deleteActor(actor){\n      console.log(actor)\n      this.axios\n          .post(`/delete/${actor.id}`)\n          .then( res => {\n            if (res.status === 200){\n              EventBus.$emit('alert',{\n                color: 'green',\n                type: 'success',\n                msg: res.data.message\n              });\n              EventBus.$emit('toActorGallery_reloadGallery');\n            }\n          })\n          .catch( e => {\n            EventBus.$emit('alert',{\n              color: 'red',\n              type: 'error',\n              msg: e.response.data.message\n            })\n          });\n    }\n  }\n}\n</script>\n\n<style scoped>\n.actionBgColor {\n  background-color: rgba(224, 224, 224, .3) !important;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}