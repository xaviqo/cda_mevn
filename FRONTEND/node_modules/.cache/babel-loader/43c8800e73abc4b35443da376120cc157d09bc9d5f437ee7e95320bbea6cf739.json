{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { EventBus } from \"@/main\";\nexport default {\n  name: \"ActorEditProfile\",\n  props: {\n    actorId: {\n      type: String,\n      required: true\n    }\n  },\n  watch: {\n    actorId: function () {\n      this.retrieveProfileInfo();\n    }\n  },\n  created() {\n    this.retrieveProfileInfo();\n  },\n  methods: {\n    save() {\n      const actor = {};\n      this.profile.forEach(v => {\n        if (v.value != null) {\n          actor.set();\n        }\n      });\n      this.axios.get(`/update/${this.actorId}`).then(res => {\n        for (let key in this.profile) {\n          this.profile[key].value = res.data[key];\n        }\n      }).catch(e => {\n        this.removeSession();\n        EventBus.$emit('alert', {\n          color: 'red',\n          type: 'error',\n          msg: e.response.data.message\n        });\n        this.$router.push(`/`);\n      });\n    },\n    retrieveProfileInfo() {\n      this.axios.get(`/profile/retrieve/${this.actorId}`).then(res => {\n        for (let key in this.profile) {\n          this.profile[key].value = res.data[key];\n        }\n      }).catch(e => {\n        this.removeSession();\n        EventBus.$emit('alert', {\n          color: 'red',\n          type: 'error',\n          msg: e.response.data.message\n        });\n        this.$router.push(`/`);\n      });\n    }\n  },\n  data: () => ({\n    profile: {\n      name: {\n        label: \"Nombre\",\n        icon: \"mdi-form-textbox\",\n        type: \"text\",\n        value: null\n      },\n      age: {\n        label: \"Edad\",\n        icon: \"mdi-cake-variant-outline\",\n        type: \"text\",\n        value: null\n      },\n      hair: {\n        label: \"Cabello\",\n        icon: \"mdi-hair-dryer-outline\",\n        type: \"text\",\n        value: null\n      },\n      eyes: {\n        label: \"Ojos\",\n        icon: \"mdi-eye-outline\",\n        type: \"text\",\n        value: null\n      },\n      height: {\n        label: \"Altura\",\n        icon: \"mdi-human-male-height\",\n        type: \"text\",\n        value: null\n      },\n      languages: {\n        label: \"Idiomas\",\n        icon: \"mdi-account-voice\",\n        type: \"combobox\",\n        value: null\n      },\n      skills: {\n        label: \"Habilidades\",\n        icon: \"mdi-drama-masks\",\n        type: \"combobox\",\n        value: null\n      },\n      sex: {\n        label: \"Sexo (Se utilizará para filtrar en página principal)\",\n        icon: \"mdi-human\",\n        type: \"select\",\n        chips: false,\n        multiple: false,\n        items: ['Hombre', 'Mujer', 'Otros', 'Sin indicar'],\n        value: null\n      }\n    }\n  })\n};","map":{"version":3,"mappings":";AAgDA;AAEA;EACAA;EACAC;IACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAH;MACA;IACA;EACA;EACAI;IACA;EACA;EACAC;IACAC;MACA;MACA;QACA;UACAC;QACA;MACA;MACA,WACAC,+BACAC;QACA;UACA;QACA;MACA,GACAC;QACA;QACAC;UACAC;UACAX;UACAY;QACA;QACA;MACA;IACA;IACAC;MACA,WACAN,yCACAC;QACA;UACA;QACA;MACA,GACAC;QACA;QACAC;UACAC;UACAX;UACAY;QACA;QACA;MACA;IACA;EACA;EACAE;IACAC;MACAlB;QACAmB;QACAC;QACAjB;QACAkB;MACA;MACAC;QACAH;QACAC;QACAjB;QACAkB;MACA;MACAE;QACAJ;QACAC;QACAjB;QACAkB;MACA;MACAG;QACAL;QACAC;QACAjB;QACAkB;MACA;MACAI;QACAN;QACAC;QACAjB;QACAkB;MACA;MACAK;QACAP;QACAC;QACAjB;QACAkB;MACA;MACAM;QACAR;QACAC;QACAjB;QACAkB;MACA;MACAO;QACAT;QACAC;QACAjB;QACA0B;QACAC;QACAC;QACAV;MACA;IACA;EACA;AACA","names":["name","props","actorId","type","required","watch","created","methods","save","actor","get","then","catch","EventBus","color","msg","retrieveProfileInfo","data","profile","label","icon","value","age","hair","eyes","height","languages","skills","sex","chips","multiple","items"],"sourceRoot":"src/components/forms","sources":["ActorEditProfile.vue"],"sourcesContent":["<template>\n  <v-row>\n    <v-col>\n      <v-list\n          subheader\n      >\n        <v-subheader class=\"mt-4\">\n          <v-icon class=\"mr-4\">mdi-notebook-outline</v-icon>\n          INFORMACIÓN PRINCIPAL <span class=\"caption ml-4\">(Los campos que no se rellenen, no saldrán en la ficha)</span>\n        </v-subheader>\n      </v-list>\n      <v-divider></v-divider>\n      <v-list>\n        <v-list-item\n            v-for=\"input in profile\"\n            :key=input.text\n        >\n            <v-text-field\n                v-if=\"input.type === 'text'\"\n                :prepend-icon=input.icon\n                :label=input.label\n                v-model=input.value\n            ></v-text-field>\n          <v-combobox\n              v-if=\"input.type === 'combobox'\"\n              :prepend-icon=input.icon\n              :label=input.label\n              v-model=input.value\n              multiple\n              chips\n          ></v-combobox>\n            <v-select\n                v-if=\"input.type === 'select'\"\n                :prepend-icon=input.icon\n                :label=input.label\n                v-model=input.value\n                :items=input.items\n                :chips=input.chips\n                :multiple=input.multiple\n            ></v-select>\n\n        </v-list-item>\n      </v-list>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport {EventBus} from \"@/main\";\n\nexport default {\n  name: \"ActorEditProfile\",\n  props: {\n    actorId: {\n      type: String,\n      required: true\n    },\n  },\n  watch: {\n    actorId: function () {\n      this.retrieveProfileInfo();\n    }\n  },\n  created() {\n    this.retrieveProfileInfo();\n  },\n  methods: {\n    save(){\n      const actor = {};\n      this.profile.forEach( v =>{\n        if (v.value != null){\n          actor.set()\n        }\n      });\n      this.axios\n          .get(`/update/${this.actorId}`)\n          .then( res => {\n            for (let key in this.profile) {\n              this.profile[key].value = res.data[key];\n            }\n          })\n          .catch( e => {\n            this.removeSession();\n            EventBus.$emit('alert',{\n              color: 'red',\n              type: 'error',\n              msg: e.response.data.message\n            });\n            this.$router.push(`/`);\n          });\n    },\n    retrieveProfileInfo(){\n      this.axios\n          .get(`/profile/retrieve/${this.actorId}`)\n          .then( res => {\n            for (let key in this.profile) {\n              this.profile[key].value = res.data[key];\n            }\n          })\n          .catch( e => {\n            this.removeSession();\n            EventBus.$emit('alert',{\n              color: 'red',\n              type: 'error',\n              msg: e.response.data.message\n            });\n            this.$router.push(`/`);\n          });\n    }\n  },\n  data: () => ({\n    profile: {\n      name: {\n        label: \"Nombre\",\n        icon: \"mdi-form-textbox\",\n        type: \"text\",\n        value: null\n      },\n      age: {\n        label: \"Edad\",\n        icon: \"mdi-cake-variant-outline\",\n        type: \"text\",\n        value: null\n      },\n      hair: {\n        label: \"Cabello\",\n        icon: \"mdi-hair-dryer-outline\",\n        type: \"text\",\n        value: null\n      },\n      eyes: {\n        label: \"Ojos\",\n        icon: \"mdi-eye-outline\",\n        type: \"text\",\n        value: null\n      },\n      height: {\n        label: \"Altura\",\n        icon: \"mdi-human-male-height\",\n        type: \"text\",\n        value: null\n      },\n      languages: {\n        label: \"Idiomas\",\n        icon: \"mdi-account-voice\",\n        type: \"combobox\",\n        value: null\n      },\n      skills: {\n        label: \"Habilidades\",\n        icon: \"mdi-drama-masks\",\n        type: \"combobox\",\n        value: null\n      },\n      sex: {\n        label: \"Sexo (Se utilizará para filtrar en página principal)\",\n        icon: \"mdi-human\",\n        type: \"select\",\n        chips: false,\n        multiple: false,\n        items: ['Hombre','Mujer','Otros','Sin indicar'],\n        value: null\n      }\n    }\n  })\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}