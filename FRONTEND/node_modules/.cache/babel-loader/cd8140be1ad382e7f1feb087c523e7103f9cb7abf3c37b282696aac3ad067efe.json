{"ast":null,"code":"var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"v-row\", [_c(\"v-col\", [_c(\"v-list\", {\n    attrs: {\n      subheader: \"\"\n    }\n  }, [_c(\"v-subheader\", {\n    staticClass: \"mt-4\"\n  }, [_c(\"v-icon\", {\n    staticClass: \"mr-4\"\n  }, [_vm._v(\"mdi-notebook-outline\")]), _vm._v(\" INFORMACIÓN PRINCIPAL \"), _c(\"span\", {\n    staticClass: \"caption ml-4\"\n  }, [_vm._v(\"(Los campos que no se rellenen, no saldrán en la ficha)\")])], 1)], 1), _c(\"v-divider\"), _c(\"v-list\", _vm._l(_vm.profile, function (input) {\n    return _c(\"v-list-item\", {\n      key: input.text\n    }, [input.type === \"text\" ? _c(\"v-text-field\", {\n      attrs: {\n        \"prepend-icon\": input.icon,\n        label: input.label\n      },\n      model: {\n        value: input.value,\n        callback: function ($$v) {\n          _vm.$set(input, \"value\", $$v);\n        },\n        expression: \"input.value\"\n      }\n    }) : _vm._e(), input.type === \"combobox\" ? _c(\"v-combobox\", {\n      attrs: {\n        \"prepend-icon\": input.icon,\n        label: input.label,\n        multiple: \"\",\n        chips: \"\"\n      },\n      model: {\n        value: input.value,\n        callback: function ($$v) {\n          _vm.$set(input, \"value\", $$v);\n        },\n        expression: \"input.value\"\n      }\n    }) : _vm._e(), input.type === \"select\" ? _c(\"v-select\", {\n      attrs: {\n        \"prepend-icon\": input.icon,\n        label: input.label,\n        items: input.items,\n        chips: input.chips,\n        multiple: input.multiple\n      },\n      model: {\n        value: input.value,\n        callback: function ($$v) {\n          _vm.$set(input, \"value\", $$v);\n        },\n        expression: \"input.value\"\n      }\n    }) : _vm._e()], 1);\n  }), 1)], 1)], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\nexport { render, staticRenderFns };","map":{"version":3,"names":["render","_vm","_c","_self","attrs","subheader","staticClass","_v","_l","profile","input","key","text","type","icon","label","model","value","callback","$$v","$set","expression","_e","multiple","chips","items","staticRenderFns","_withStripped"],"sources":["/home/xavi/Desktop/TRABAJOS/CDA/MEVN/FRONTEND/src/components/forms/ActorEditProfile.vue"],"sourcesContent":["var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"v-row\",\n    [\n      _c(\n        \"v-col\",\n        [\n          _c(\n            \"v-list\",\n            { attrs: { subheader: \"\" } },\n            [\n              _c(\n                \"v-subheader\",\n                { staticClass: \"mt-4\" },\n                [\n                  _c(\"v-icon\", { staticClass: \"mr-4\" }, [\n                    _vm._v(\"mdi-notebook-outline\"),\n                  ]),\n                  _vm._v(\" INFORMACIÓN PRINCIPAL \"),\n                  _c(\"span\", { staticClass: \"caption ml-4\" }, [\n                    _vm._v(\n                      \"(Los campos que no se rellenen, no saldrán en la ficha)\"\n                    ),\n                  ]),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n          _c(\"v-divider\"),\n          _c(\n            \"v-list\",\n            _vm._l(_vm.profile, function (input) {\n              return _c(\n                \"v-list-item\",\n                { key: input.text },\n                [\n                  input.type === \"text\"\n                    ? _c(\"v-text-field\", {\n                        attrs: {\n                          \"prepend-icon\": input.icon,\n                          label: input.label,\n                        },\n                        model: {\n                          value: input.value,\n                          callback: function ($$v) {\n                            _vm.$set(input, \"value\", $$v)\n                          },\n                          expression: \"input.value\",\n                        },\n                      })\n                    : _vm._e(),\n                  input.type === \"combobox\"\n                    ? _c(\"v-combobox\", {\n                        attrs: {\n                          \"prepend-icon\": input.icon,\n                          label: input.label,\n                          multiple: \"\",\n                          chips: \"\",\n                        },\n                        model: {\n                          value: input.value,\n                          callback: function ($$v) {\n                            _vm.$set(input, \"value\", $$v)\n                          },\n                          expression: \"input.value\",\n                        },\n                      })\n                    : _vm._e(),\n                  input.type === \"select\"\n                    ? _c(\"v-select\", {\n                        attrs: {\n                          \"prepend-icon\": input.icon,\n                          label: input.label,\n                          items: input.items,\n                          chips: input.chips,\n                          multiple: input.multiple,\n                        },\n                        model: {\n                          value: input.value,\n                          callback: function ($$v) {\n                            _vm.$set(input, \"value\", $$v)\n                          },\n                          expression: \"input.value\",\n                        },\n                      })\n                    : _vm._e(),\n                ],\n                1\n              )\n            }),\n            1\n          ),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}