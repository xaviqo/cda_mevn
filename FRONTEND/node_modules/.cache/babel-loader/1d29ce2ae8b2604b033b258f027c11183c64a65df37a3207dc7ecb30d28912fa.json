{"ast":null,"code":"import { EventBus } from \"@/main\";\nexport default {\n  name: \"ActorEditMultimedia\",\n  data: () => ({\n    activeTab: null,\n    uploading: false,\n    newMultimedia: null,\n    titleRule: [v => new RegExp(/^[a-zA-Z0-9\\s]*$/).test(v) || 'El título solo puede contener: Letras, números y espacios'],\n    multimedia: {\n      photos: {\n        name: 'Imágenes',\n        icon: 'mdi-camera',\n        values: []\n      },\n      videos: {\n        name: 'Videos',\n        icon: 'mdi-filmstrip',\n        values: []\n      }\n    },\n    sources: [{\n      name: 'Youtube',\n      icon: 'mdi-youtube'\n    }, {\n      name: 'CDA',\n      icon: 'mdi-filmstrip'\n    }]\n  }),\n  created() {\n    this.activeTab = 'photos';\n    this.initMultimedia();\n  },\n  methods: {\n    addFile(file) {\n      console.log(file);\n      if (file == null || this.newMultimedia.name.length < 1) {\n        EventBus.$emit('alert', {\n          color: 'red',\n          type: 'error',\n          msg: 'Debes especificar un archivo y un título'\n        });\n        return;\n      }\n      if (!new RegExp(/^[a-zA-Z0-9\\s]*$/).test(this.newMultimedia.name)) {\n        EventBus.$emit('alert', {\n          color: 'red',\n          type: 'error',\n          msg: 'El título del archivo solo puede contener: Letras, números y espacios'\n        });\n        return;\n      }\n      this.initMultimedia();\n    },\n    uploadFiles() {\n      this.uploading = true;\n      const fileToUpload = new FormData();\n      fileToUpload.append('cda_file', file);\n      this.newMultimedia.file = fileToUpload;\n      this.axios.post(`/upload/${this.activeTab}/${this.actorId}/${this.newMultimedia.name}`, this.newMultimedia.file).then(res => {\n        EventBus.$emit('alert', {\n          color: 'green',\n          type: 'success',\n          msg: res.data.message\n        });\n        this.uploading = false;\n      }).catch(e => {\n        if (e.response.status === 500) {\n          EventBus.$emit('alert', {\n            color: 'red',\n            type: 'error',\n            msg: e.response.data.message\n          });\n        } else {\n          console.log(e);\n          EventBus.$emit('alert', {\n            color: 'red',\n            type: 'error',\n            msg: 'Ha ocurrido un error al subir el archivo'\n          });\n        }\n        this.uploading = false;\n      });\n    },\n    changeActiveTab(tab) {\n      this.activeTab = tab;\n    },\n    initMultimedia() {\n      this.newMultimedia = {\n        source: '',\n        name: '',\n        file: null\n      };\n    }\n  },\n  props: {\n    actorId: {\n      type: String,\n      required: true\n    }\n  },\n  watch: {\n    actorId: {\n      handler: function () {\n        this.retrieveBackgroundInfo();\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAqEA;AACA;EACAA;EACAC;IACAC;IACAC;IACAC;IACAC,YACAC,2GACA;IACAC;MACAC;QACAR;QACAS;QACAC;MACA;MACAC;QACAX;QACAS;QACAC;MACA;IACA;IACAE,UACA;MACAZ;MACAS;IACA,GACA;MACAT;MACAS;IACA;EAEA;EACAI;IACA;IACA;EACA;EACAC;IACAC;MAEAC;MAEA;QACAC;UACAC;UACAC;UACAC;QACA;QACA;MACA;MAEA;QACAH;UACAC;UACAC;UACAC;QACA;QACA;MACA;MAEA;IAEA;IACAC;MACA;MACA;MACAC;MACA;MACA,WACAC,6EACA,wBACA,CACAC;QACAP;UACAC;UACAC;UACAC;QACA;QACA;MACA,GACAK;QACA;UACAR;YACAC;YACAC;YACAC;UACA;QACA;UACAJ;UACAC;YACAC;YACAC;YACAC;UACA;QACA;QACA;MACA;IACA;IACAM;MACA;IACA;IACAC;MACA;QACAC;QACA5B;QACA6B;MACA;IACA;EACA;EACAC;IACAC;MACAZ;MACAa;IACA;EACA;EACAC;IACAF;MACAG;QACA;MACA;IACA;EACA;AACA","names":["name","data","activeTab","uploading","newMultimedia","titleRule","v","multimedia","photos","icon","values","videos","sources","created","methods","addFile","console","EventBus","color","type","msg","uploadFiles","fileToUpload","post","then","catch","changeActiveTab","initMultimedia","source","file","props","actorId","required","watch","handler"],"sourceRoot":"src/components/forms","sources":["ActorEditMultimedia.vue"],"sourcesContent":["<template>\n  <v-row>\n    <v-col>\n      <v-list>\n        <v-tabs\n            grow\n            hide-slider\n            class=\"mt-1\"\n        >\n          <v-tab\n              v-for=\"(md, i) in multimedia\"\n              :key=i\n              class=\"mb-2\"\n              :class=\"{ active: activeTab === i}\"\n              @click=changeActiveTab(i)\n          >\n            <v-subheader\n                class=\"mt-2\"\n            >\n              <v-icon\n                  class=\"mr-4\"\n                  v-if=\"activeTab === i\"\n              >\n                {{ md.icon }}\n              </v-icon>\n              {{ md.name }}\n            </v-subheader>\n          </v-tab>\n        </v-tabs>\n      </v-list>\n      <v-list>\n        <v-row class=\"px-6\">\n          <v-col cols=\"5\">\n            <v-text-field\n                prepend-icon=\"mdi-format-text\"\n                label=\"Título de archivo\"\n                :rules=titleRule\n                v-model=newMultimedia.name\n            ></v-text-field>\n          </v-col>\n          <v-col cols=\"6\">\n            <v-file-input\n                label=\"Archivo\"\n                :loading=\"uploading\"\n                accept=\"image/png, image/jpeg, image/bmp\"\n                v-model=newMultimedia.file\n            ></v-file-input>\n          </v-col>\n          <v-col\n              class=\"d-flex justify-center align-center\"\n          >\n            <v-btn\n                small\n                icon\n                outlined\n                @click=addFile(newMultimedia.file)\n            >\n              <v-icon>\n                mdi-plus\n              </v-icon>\n            </v-btn>\n          </v-col>\n        </v-row>\n      </v-list>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport {EventBus} from \"@/main\";\nexport default {\n  name: \"ActorEditMultimedia\",\n  data: () => ({\n    activeTab: null,\n    uploading: false,\n    newMultimedia: null,\n    titleRule: [\n        (v) => new RegExp(/^[a-zA-Z0-9\\s]*$/).test(v) || 'El título solo puede contener: Letras, números y espacios'\n    ],\n    multimedia: {\n      photos: {\n        name: 'Imágenes',\n        icon: 'mdi-camera',\n        values: []\n      },\n      videos: {\n        name: 'Videos',\n        icon: 'mdi-filmstrip',\n        values: []\n      }\n    },\n    sources: [\n      {\n        name: 'Youtube',\n        icon: 'mdi-youtube'\n      },\n      {\n        name: 'CDA',\n        icon: 'mdi-filmstrip'\n      }\n    ]\n  }),\n  created() {\n    this.activeTab = 'photos';\n    this.initMultimedia();\n  },\n  methods: {\n    addFile(file){\n\n      console.log(file);\n\n      if (file == null ||this.newMultimedia.name.length < 1){\n        EventBus.$emit('alert',{\n          color: 'red',\n          type: 'error',\n          msg: 'Debes especificar un archivo y un título'\n        });\n        return;\n      }\n\n      if (!new RegExp(/^[a-zA-Z0-9\\s]*$/).test(this.newMultimedia.name)){\n        EventBus.$emit('alert',{\n          color: 'red',\n          type: 'error',\n          msg: 'El título del archivo solo puede contener: Letras, números y espacios'\n        });\n        return;\n      }\n\n      this.initMultimedia();\n\n    },\n    uploadFiles(){\n      this.uploading = true;\n      const fileToUpload = new FormData();\n      fileToUpload.append('cda_file',file);\n      this.newMultimedia.file = fileToUpload;\n      this.axios\n          .post(`/upload/${this.activeTab}/${this.actorId}/${this.newMultimedia.name}`,\n              this.newMultimedia.file\n          )\n          .then( res => {\n            EventBus.$emit('alert',{\n              color: 'green',\n              type: 'success',\n              msg: res.data.message\n            });\n            this.uploading = false;\n          })\n          .catch( e => {\n            if (e.response.status === 500){\n              EventBus.$emit('alert',{\n                color: 'red',\n                type: 'error',\n                msg: e.response.data.message\n              });\n            } else {\n              console.log(e);\n              EventBus.$emit('alert',{\n                color: 'red',\n                type: 'error',\n                msg: 'Ha ocurrido un error al subir el archivo'\n              });\n            }\n            this.uploading = false;\n          });\n    },\n    changeActiveTab(tab) {\n      this.activeTab = tab;\n    },\n    initMultimedia(){\n      this.newMultimedia = {\n        source: '',\n        name: '',\n        file: null\n      };\n    }\n  },\n  props: {\n    actorId: {\n      type: String,\n      required: true\n    },\n  },\n  watch: {\n    actorId: {\n      handler: function () {\n        this.retrieveBackgroundInfo();\n      }\n    }\n  },\n}\n</script>\n\n<style scoped>\n.v-tab {\n  border-left: 1px solid rgba(0, 0, 0, .1);\n  border-right: 1px solid rgba(0, 0, 0, .1);\n}\n.v-tab--active {\n  text-shadow: 0 0 1px rgba(0, 0, 0, .4);\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}