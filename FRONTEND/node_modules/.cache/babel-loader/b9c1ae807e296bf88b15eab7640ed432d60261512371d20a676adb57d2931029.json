{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { EventBus } from \"@/main\";\nimport BackgroundTabs from \"@/constants/BackgroundTabs\";\nimport PortfolioButtonsBar from \"@/components/portfolio/PortfolioButtonsBar.vue\";\nimport PortfolioPersonalData from \"@/components/portfolio/PortfolioPersonalData.vue\";\nimport PortfolioMainImg from \"@/components/portfolio/PortfolioMainImg.vue\";\nimport { mixins } from \"../../mixins\";\nexport default {\n  name: \"ActorProfile\",\n  mixins: [mixins],\n  components: {\n    PortfolioMainImg,\n    PortfolioPersonalData,\n    PortfolioButtonsBar\n  },\n  data: () => ({\n    urlProfile: '',\n    tabsArray: [],\n    actor: {\n      actorName: '',\n      background: {}\n    },\n    personalData: {},\n    mainImg: {\n      publicId: '',\n      secureUrl: '',\n      url: ''\n    }\n  }),\n  created() {\n    this.urlProfile = this.$route.params.name;\n    this.retrieveFullProfile();\n  },\n  methods: {\n    retrieveFullProfile() {\n      this.axios.get(`/full-profile/retrieve/${this.urlProfile}`).then(res => {\n        this.actor = res.data;\n        this.currentTab(this.$route.params.section);\n        this.preparePersonalData(this.actor);\n        this.prepareMainImg(this.actor);\n      }).catch(e => {\n        EventBus.$emit('alert', {\n          color: 'red',\n          type: 'error',\n          msg: e.response.data.message\n        });\n        this.$router.push(`/`);\n      });\n    },\n    preparePersonalData(actor) {\n      this.personalData = {\n        name: actor.name,\n        age: actor.age,\n        eyes: actor.eyes,\n        hair: actor.hair,\n        height: actor.height,\n        languages: actor.languages\n      };\n    },\n    prepareMainImg(actor) {\n      actor.photos.forEach(ph => {\n        if (ph.main) {\n          this.mainImg.publicId = ph.publicId;\n          this.mainImg.secureUrl = this.addFaceDetection(ph.secureUrl);\n          this.mainImg.url = this.addFaceDetection(ph.url);\n        }\n      });\n    },\n    currentTab(urlSection) {\n      for (const bg of Object.keys(this.actor.background)) {\n        if (this.actor.background[bg].active) {\n          this.tabsArray.push({\n            bgName: BackgroundTabs[bg],\n            bgUrl: BackgroundTabs[bg].replace(/\\s/g, '-').toLowerCase()\n          });\n        }\n      }\n      if (this.actor.photos.length > 0) {\n        this.tabsArray.push({\n          bgName: 'Fotografías',\n          bgUrl: 'fotografias'\n        });\n      }\n      if (this.actor.videos.length > 0) {\n        this.tabsArray.push({\n          bgName: 'Videos',\n          bgUrl: 'videos'\n        });\n      }\n      if (urlSection !== undefined) {\n        const tabIndex = this.tabsArray.findIndex(tab => tab.bgUrl == urlSection);\n        EventBus.$emit('toButtonsBar_actorProfile', parseInt(tabIndex + 1));\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;EACAA;EACAC;EACAC;IAAAC;IAAAC;IAAAC;EAAA;EACAC;IACAC;IACAC;IACAC;MACAC;MACAC;IACA;IACAC;IACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;IACA;EACA;EACAC;IACAC;MACA,WACAC,iDACAC;QACA;QACA;QACA;QACA;MACA,GACAC;QACAC;UACAC;UACAC;UACAC;QACA;QACA;MACA;IACA;IACAC;MACA;QACA3B;QACA4B;QACAC;QACAC;QACAC;QACAC;MACA;IACA;IACAC;MACAxB;QACA;UACA;UACA;UACA;QACA;MACA;IACA;IACAyB;MACA;QACA;UACA;YACAC;YACAC;UACA;QACA;MACA;MACA;QACA;UACAD;UACAC;QACA;MACA;MACA;QACA;UACAD;UACAC;QACA;MACA;MACA;QACA;QACAb;MACA;IACA;EACA;AACA","names":["name","mixins","components","PortfolioMainImg","PortfolioPersonalData","PortfolioButtonsBar","data","urlProfile","tabsArray","actor","actorName","background","personalData","mainImg","publicId","secureUrl","url","created","methods","retrieveFullProfile","get","then","catch","EventBus","color","type","msg","preparePersonalData","age","eyes","hair","height","languages","prepareMainImg","currentTab","bgName","bgUrl"],"sourceRoot":"src/views","sources":["ActorProfile.vue"],"sourcesContent":["<template>\n  <div>\n    <PortfolioButtonsBar\n        :actor-name=actor.name\n        :tabs-array=tabsArray\n    />\n    <v-row\n        class=\"pa-6\"\n    >\n      <v-col\n          cols=\"4\"\n      >\n        <PortfolioMainImg\n            :main-img=mainImg\n        />\n      </v-col>\n      <v-col\n          class=\"d-flex justify-start\"\n      >\n        <PortfolioPersonalData\n            :personal-data=personalData\n        />\n      </v-col>\n      <v-col>\n        <PortfolioPersonalData\n            :personal-data=personalData\n        />\n      </v-col>\n    </v-row>\n  </div>\n</template>\n\n<script>\nimport {EventBus} from \"@/main\";\nimport BackgroundTabs from \"@/constants/BackgroundTabs\";\nimport PortfolioButtonsBar from \"@/components/portfolio/PortfolioButtonsBar.vue\";\nimport PortfolioPersonalData from \"@/components/portfolio/PortfolioPersonalData.vue\";\nimport PortfolioMainImg from \"@/components/portfolio/PortfolioMainImg.vue\";\nimport {mixins} from \"../../mixins\";\nexport default {\n  name: \"ActorProfile\",\n  mixins: [mixins],\n  components: {PortfolioMainImg, PortfolioPersonalData, PortfolioButtonsBar},\n  data: () => ({\n    urlProfile: '',\n    tabsArray: [],\n    actor: {\n      actorName: '',\n      background: {}\n    },\n    personalData: {},\n    mainImg: {\n      publicId: '',\n      secureUrl: '',\n      url: ''\n    }\n  }),\n  created() {\n    this.urlProfile = this.$route.params.name;\n    this.retrieveFullProfile();\n  },\n  methods: {\n    retrieveFullProfile(){\n      this.axios\n          .get(`/full-profile/retrieve/${this.urlProfile}`)\n          .then( res => {\n            this.actor = res.data;\n            this.currentTab(this.$route.params.section);\n            this.preparePersonalData(this.actor);\n            this.prepareMainImg(this.actor);\n          })\n          .catch( e => {\n            EventBus.$emit('alert',{\n              color: 'red',\n              type: 'error',\n              msg: e.response.data.message\n            });\n            this.$router.push(`/`);\n          });\n    },\n    preparePersonalData(actor){\n      this.personalData = {\n        name: actor.name,\n        age: actor.age,\n        eyes: actor.eyes,\n        hair: actor.hair,\n        height: actor.height,\n        languages: actor.languages\n      }\n    },\n    prepareMainImg(actor){\n      actor.photos.forEach( ph => {\n        if (ph.main) {\n          this.mainImg.publicId = ph.publicId;\n          this.mainImg.secureUrl = this.addFaceDetection(ph.secureUrl);\n          this.mainImg.url = this.addFaceDetection(ph.url);\n        }\n      });\n    },\n    currentTab(urlSection){\n      for (const bg of Object.keys(this.actor.background)) {\n        if (this.actor.background[bg].active){\n          this.tabsArray.push({\n            bgName: BackgroundTabs[bg],\n            bgUrl: BackgroundTabs[bg].replace(/\\s/g, '-').toLowerCase()\n          })\n        }\n      }\n      if (this.actor.photos.length > 0) {\n        this.tabsArray.push({\n          bgName: 'Fotografías',\n          bgUrl: 'fotografias'\n        })\n      }\n      if (this.actor.videos.length > 0) {\n        this.tabsArray.push({\n          bgName: 'Videos',\n          bgUrl: 'videos'\n        })\n      }\n      if (urlSection !== undefined){\n        const tabIndex = this.tabsArray.findIndex( tab => tab.bgUrl == urlSection);\n        EventBus.$emit('toButtonsBar_actorProfile',parseInt(tabIndex+1));\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}