{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineComponent } from \"vue\";\nimport PortfolioButtonsBar from \"@/components/portfolio/PortfolioButtonsBar.vue\";\nimport { mixins } from \"../../mixins\";\nimport { EventBus } from \"@/main\";\nexport default defineComponent({\n  name: \"ActorProfile\",\n  mixins: [mixins],\n  components: {\n    PortfolioButtonsBar\n  },\n  data: () => ({\n    isMobile: false,\n    urlProfile: '',\n    tabsArray: [],\n    actor: {\n      actorName: '',\n      languages: [],\n      background: {}\n    },\n    personalData: {},\n    mainImg: {\n      publicId: '',\n      secureUrl: '',\n      url: ''\n    }\n  }),\n  methods: {\n    retrieveFullProfile() {\n      this.axios.get(`/full-profile/retrieve/${this.urlProfile}`).then(res => {\n        this.actor = res.data;\n        this.currentTab(this.$route.params.section);\n        this.preparePersonalData(this.actor);\n        this.prepareMainImg(this.actor);\n      }).catch(e => {\n        EventBus.$emit('alert', {\n          color: 'red',\n          type: 'error',\n          msg: e.response.data.message\n        });\n        this.$router.push(`/`);\n      });\n    }\n  },\n  beforeDestroy() {\n    if (typeof window === 'undefined') return;\n    window.removeEventListener('resize', this.onResize, {\n      passive: true\n    });\n  },\n  mounted() {\n    this.onResize();\n    window.addEventListener('resize', this.onResize, {\n      passive: true\n    });\n  },\n  created() {\n    this.urlProfile = this.$route.params.name;\n    this.retrieveFullProfile();\n  }\n});","map":{"version":3,"mappings":";AASA;AACA;AACA;AACA;AAEA;EACAA;EACAC;EACAC;IAAAC;EAAA;EACAC;IACAC;IACAC;IACAC;IACAC;MACAC;MACAC;MACAC;IACA;IACAC;IACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA,WACAC,iDACAC;QACA;QACA;QACA;QACA;MACA,GACAC;QACAC;UACAC;UACAC;UACAC;QACA;QACA;MACA;IACA;EACA;EACAC;IACA;IACAC;MAAAC;IAAA;EACA;EACAC;IACA;IAEAF;MAAAC;IAAA;EACA;EACAE;IACA;IACA;EACA;AACA","names":["name","mixins","components","PortfolioButtonsBar","data","isMobile","urlProfile","tabsArray","actor","actorName","languages","background","personalData","mainImg","publicId","secureUrl","url","methods","retrieveFullProfile","get","then","catch","EventBus","color","type","msg","beforeDestroy","window","passive","mounted","created"],"sourceRoot":"src/views","sources":["ActorProfile.vue"],"sourcesContent":["<template>\n  <v-container fluid>\n    <PortfolioButtonsBar\n        :actor-name=actor.name\n        :tabs-array=tabsArray\n    />\n  </v-container>\n</template>\n<script>\nimport {defineComponent} from \"vue\";\nimport PortfolioButtonsBar from \"@/components/portfolio/PortfolioButtonsBar.vue\";\nimport {mixins} from \"../../mixins\";\nimport {EventBus} from \"@/main\";\n\nexport default defineComponent({\n  name: \"ActorProfile\",\n  mixins: [mixins],\n  components: {PortfolioButtonsBar},\n  data: () => ({\n    isMobile: false,\n    urlProfile: '',\n    tabsArray: [],\n    actor: {\n      actorName: '',\n      languages: [],\n      background: {}\n    },\n    personalData: {},\n    mainImg: {\n      publicId: '',\n      secureUrl: '',\n      url: ''\n    }\n  }),\n  methods: {\n    retrieveFullProfile() {\n      this.axios\n          .get(`/full-profile/retrieve/${this.urlProfile}`)\n          .then(res => {\n            this.actor = res.data;\n            this.currentTab(this.$route.params.section);\n            this.preparePersonalData(this.actor);\n            this.prepareMainImg(this.actor);\n          })\n          .catch(e => {\n            EventBus.$emit('alert', {\n              color: 'red',\n              type: 'error',\n              msg: e.response.data.message\n            });\n            this.$router.push(`/`);\n          });\n    },\n  },\n  beforeDestroy () {\n    if (typeof window === 'undefined') return\n    window.removeEventListener('resize', this.onResize, { passive: true })\n  },\n  mounted () {\n    this.onResize()\n\n    window.addEventListener('resize', this.onResize, { passive: true })\n  },\n  created() {\n    this.urlProfile = this.$route.params.name;\n    this.retrieveFullProfile();\n  }\n})\n</script>\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}