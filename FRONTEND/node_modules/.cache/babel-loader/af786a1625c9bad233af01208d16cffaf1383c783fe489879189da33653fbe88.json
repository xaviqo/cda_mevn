{"ast":null,"code":"import { EventBus } from \"@/main\";\nexport default {\n  name: \"ActorEditProfile\",\n  props: {\n    actorId: {\n      type: String,\n      required: true\n    }\n  },\n  watch: {\n    actorId: {\n      handler: function () {\n        this.retrieveProfileInfo();\n      }\n    },\n    'profile.languages.value': {\n      handler: function (val) {\n        console.log(val);\n        console.log(\"ha cambiado\");\n      }\n    }\n  },\n  created() {\n    this.retrieveProfileInfo();\n    EventBus.$on('actorEditionForm_actorEditProfile_save', this.save);\n  },\n  methods: {\n    save() {\n      const actor = {};\n      for (let profileKey in this.profile) {\n        if (this.profile[profileKey].value != null) {\n          actor[profileKey] = this.profile[profileKey].value;\n        }\n      }\n      if (actor.name.length < 1 && Object.keys(actor).length < 1) {\n        EventBus.$emit('alert', {\n          color: 'red',\n          type: 'error',\n          msg: 'El perfil no puede estar vacío'\n        });\n        return;\n      }\n      EventBus.$emit('toActorEditionForm_save', actor);\n    },\n    retrieveProfileInfo() {\n      this.axios.get(`/profile/retrieve/${this.actorId}`).then(res => {\n        for (let key in this.profile) {\n          this.profile[key].value = res.data[key];\n        }\n      }).catch(e => {\n        EventBus.$emit('alert', {\n          color: 'red',\n          type: 'error',\n          msg: e.response.data.message\n        });\n      });\n    }\n  },\n  data: () => ({\n    profile: {\n      name: {\n        label: \"Nombre\",\n        icon: \"mdi-form-textbox\",\n        type: \"text\",\n        value: null\n      },\n      age: {\n        label: \"Edad\",\n        icon: \"mdi-cake-variant-outline\",\n        type: \"text\",\n        value: null\n      },\n      hair: {\n        label: \"Cabello\",\n        icon: \"mdi-hair-dryer-outline\",\n        type: \"text\",\n        value: null\n      },\n      eyes: {\n        label: \"Ojos\",\n        icon: \"mdi-eye-outline\",\n        type: \"text\",\n        value: null\n      },\n      height: {\n        label: \"Altura\",\n        icon: \"mdi-human-male-height\",\n        type: \"text\",\n        value: null\n      },\n      languages: {\n        label: \"Idiomas\",\n        icon: \"mdi-account-voice\",\n        type: \"combobox\",\n        value: null\n      },\n      skills: {\n        label: \"Habilidades\",\n        icon: \"mdi-drama-masks\",\n        type: \"combobox\",\n        value: null\n      },\n      sex: {\n        label: \"Sexo (Se utilizará para filtrar en página principal)\",\n        icon: \"mdi-human\",\n        type: \"select\",\n        chips: false,\n        multiple: false,\n        items: ['Hombre', 'Mujer', 'Otros', 'Sin indicar'],\n        value: null\n      },\n      languagesSkill: []\n    }\n  })\n};","map":{"version":3,"mappings":"AAgEA;AAEA;EACAA;EACAC;IACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAH;MACAI;QACA;MACA;IACA;IACA;MACAA;QACAC;QACAA;MACA;IACA;EACA;EACAC;IACA;IACAC,uDACA,UACA;EACA;EACAC;IACAC;MACA;MAEA;QACA;UACAC;QACA;MACA;MAEA;QACAH;UACAI;UACAV;UACAW;QACA;QACA;MACA;MAEAL;IACA;IACAM;MACA,WACAC,yCACAC;QACA;UACA;QACA;MACA,GACAC;QACAT;UACAI;UACAV;UACAW;QACA;MACA;IACA;EACA;EACAK;IACAC;MACApB;QACAqB;QACAC;QACAnB;QACAoB;MACA;MACAC;QACAH;QACAC;QACAnB;QACAoB;MACA;MACAE;QACAJ;QACAC;QACAnB;QACAoB;MACA;MACAG;QACAL;QACAC;QACAnB;QACAoB;MACA;MACAI;QACAN;QACAC;QACAnB;QACAoB;MACA;MACAK;QACAP;QACAC;QACAnB;QACAoB;MACA;MACAM;QACAR;QACAC;QACAnB;QACAoB;MACA;MACAO;QACAT;QACAC;QACAnB;QACA4B;QACAC;QACAC;QACAV;MACA;MACAW;IACA;EACA;AACA","names":["name","props","actorId","type","required","watch","handler","console","created","EventBus","methods","save","actor","color","msg","retrieveProfileInfo","get","then","catch","data","profile","label","icon","value","age","hair","eyes","height","languages","skills","sex","chips","multiple","items","languagesSkill"],"sourceRoot":"src/components/forms","sources":["ActorEditProfile.vue"],"sourcesContent":["<template>\n  <v-row>\n    <v-col>\n      <v-list\n          subheader\n      >\n        <v-subheader class=\"mt-4\">\n          <v-icon class=\"mr-4\">mdi-notebook-outline</v-icon>\n          INFORMACIÓN PRINCIPAL <span class=\"caption ml-4\">(Los campos que no se rellenen, no saldrán en la ficha)</span>\n        </v-subheader>\n      </v-list>\n      <v-divider></v-divider>\n      <v-list>\n        <v-list-item\n            v-for=\"input in profile\"\n            :key=input.text\n            v-if=\"input.type\"\n        >\n            <v-text-field\n                v-if=\"input.type === 'text'\"\n                :prepend-icon=input.icon\n                :label=input.label\n                v-model=input.value\n            ></v-text-field>\n          <v-combobox\n              v-if=\"input.type === 'combobox'\"\n              :prepend-icon=input.icon\n              :label=input.label\n              v-model=input.value\n              multiple\n              chips\n          ></v-combobox>\n            <v-select\n                v-if=\"input.type === 'select'\"\n                :prepend-icon=input.icon\n                :label=input.label\n                v-model=input.value\n                :items=input.items\n                :chips=input.chips\n                :multiple=input.multiple\n            ></v-select>\n        </v-list-item>\n      </v-list>\n      <template v-if=\"profile.languages.value.length > 0\">\n        <v-list>\n          <v-subheader>\n            <v-icon class=\"mr-4\">mdi-translate-variant</v-icon>\n            Configurar Idiomas\n          </v-subheader>\n        </v-list>\n        <v-divider></v-divider>\n        <v-list>\n          <v-list-item\n              v-for=\"lang in profile.languages.value\"\n          >\n            {{ lang }}\n          </v-list-item>\n        </v-list>\n      </template>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport {EventBus} from \"@/main\";\n\nexport default {\n  name: \"ActorEditProfile\",\n  props: {\n    actorId: {\n      type: String,\n      required: true\n    },\n  },\n  watch: {\n    actorId: {\n      handler: function () {\n        this.retrieveProfileInfo();\n      }\n    },\n    'profile.languages.value': {\n      handler: function (val){\n        console.log(val)\n        console.log(\"ha cambiado\")\n      }\n    }\n  },\n  created() {\n    this.retrieveProfileInfo();\n    EventBus.$on('actorEditionForm_actorEditProfile_save',\n        this.save\n    );\n  },\n  methods: {\n    save(){\n      const actor = {};\n\n      for (let profileKey in this.profile) {\n        if (this.profile[profileKey].value != null){\n          actor[profileKey] = this.profile[profileKey].value;\n        }\n      }\n\n      if (actor.name.length < 1 && Object.keys(actor).length < 1){\n        EventBus.$emit('alert',{\n          color: 'red',\n          type: 'error',\n          msg: 'El perfil no puede estar vacío'\n        });\n        return;\n      }\n\n      EventBus.$emit('toActorEditionForm_save',actor);\n    },\n    retrieveProfileInfo(){\n      this.axios\n          .get(`/profile/retrieve/${this.actorId}`)\n          .then( res => {\n            for (let key in this.profile) {\n              this.profile[key].value = res.data[key];\n            }\n          })\n          .catch( e => {\n            EventBus.$emit('alert',{\n              color: 'red',\n              type: 'error',\n              msg: e.response.data.message\n            });\n          });\n    }\n  },\n  data: () => ({\n    profile: {\n      name: {\n        label: \"Nombre\",\n        icon: \"mdi-form-textbox\",\n        type: \"text\",\n        value: null\n      },\n      age: {\n        label: \"Edad\",\n        icon: \"mdi-cake-variant-outline\",\n        type: \"text\",\n        value: null\n      },\n      hair: {\n        label: \"Cabello\",\n        icon: \"mdi-hair-dryer-outline\",\n        type: \"text\",\n        value: null\n      },\n      eyes: {\n        label: \"Ojos\",\n        icon: \"mdi-eye-outline\",\n        type: \"text\",\n        value: null\n      },\n      height: {\n        label: \"Altura\",\n        icon: \"mdi-human-male-height\",\n        type: \"text\",\n        value: null\n      },\n      languages: {\n        label: \"Idiomas\",\n        icon: \"mdi-account-voice\",\n        type: \"combobox\",\n        value: null\n      },\n      skills: {\n        label: \"Habilidades\",\n        icon: \"mdi-drama-masks\",\n        type: \"combobox\",\n        value: null\n      },\n      sex: {\n        label: \"Sexo (Se utilizará para filtrar en página principal)\",\n        icon: \"mdi-human\",\n        type: \"select\",\n        chips: false,\n        multiple: false,\n        items: ['Hombre','Mujer','Otros','Sin indicar'],\n        value: null\n      },\n      languagesSkill: []\n    }\n  })\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}