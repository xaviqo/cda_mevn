{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { EventBus } from \"@/main\";\nimport { mixins } from \"../../mixins\";\nimport AdminBar from \"@/components/AdminBar.vue\";\nexport default {\n  name: \"AdminPanel\",\n  components: {\n    AdminBar\n  },\n  mixins: [mixins],\n  data: () => ({\n    showPwd: false,\n    valid: true,\n    admin: {\n      user: '',\n      password: ''\n    }\n  }),\n  created() {\n    if (this.isSessionSetted()) this.$router.push(`/cda-admin`);\n  },\n  methods: {\n    reset() {\n      this.$refs.adminForm.reset();\n    },\n    connect() {\n      if (!this.$refs.adminForm.validate()) return;\n      this.axios.post(`/admin/login`, this.admin).then(res => {\n        if (res.status === 200) {\n          EventBus.$emit('alert', {\n            color: 'green',\n            type: 'success',\n            msg: 'Credenciales correctas'\n          });\n          if (this.isSessionSetted()) this.removeSession();\n          this.saveSession(res.data);\n          setTimeout(this.$router.push(`/cda-admin`), 1000);\n        }\n      }).catch(e => {\n        EventBus.$emit('alert', {\n          color: 'red',\n          type: 'error',\n          msg: e.response.data.message\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";AA6DA;AACA;AACA;AAEA;EACAA;EACAC;IAAAC;EAAA;EACAC;EACAC;IACAC;IACAC;IACAC;MACAC;MACAC;IACA;EACA;EACAC;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;MACA,WACAC,iCACAC;QACA;UACAC;YACAC;YACAC;YACAC;UACA;UACA;UAEA;UACAC,WACA,iCACA;QACA;MACA,GACAC;QACAL;UACAC;UACAC;UACAC;QACA;MACA;IACA;EACA;AACA","names":["name","components","AdminBar","mixins","data","showPwd","valid","admin","user","password","created","methods","reset","connect","post","then","EventBus","color","type","msg","setTimeout","catch"],"sourceRoot":"src/views","sources":["AdminLogin.vue"],"sourcesContent":["<template>\n  <div>\n      <v-row class=\"flexized\">\n        <v-card max-width=\"60vw\" class=\"pa-8\" elevation=\"0\" outlined>\n          <template>\n            <v-form\n                ref=\"adminForm\"\n                v-model=\"valid\"\n                lazy-validation\n            >\n              <v-text-field\n                  v-model=\"admin.user\"\n                  append-icon=\"mdi-account\"\n                  :rules=\"[v => !!v || 'Es necesario indicar un usuario']\"\n                  label=\"Usuario\"\n                  required\n              ></v-text-field>\n\n              <v-text-field\n                  v-model=\"admin.password\"\n                  :type=\"showPwd ? 'text' : 'password'\"\n                  :append-icon=\"showPwd ? 'mdi-eye' : 'mdi-eye-off'\"\n                  :rules=\"[v => !!v || 'Es necesario indicar una contraseña']\"\n                  label=\"Contraseña\"\n                  @click:append=\"showPwd = !showPwd\"\n                  required\n              ></v-text-field>\n              <div class=\"mt-2\">\n                <v-btn\n                    tile\n                    outlined\n                    color=\"error\"\n                    class=\"mr-4\"\n                    @click=\"reset\"\n                >\n                  Reiniciar\n                </v-btn>\n                <v-btn\n                    tile\n                    outlined\n                    color=\"success\"\n                    @click=\"connect\"\n                >\n                  Conectar\n                </v-btn>\n              </div>\n            </v-form>\n          </template>\n        </v-card>\n      </v-row>\n  </div>\n</template>\n<style>\n.flexized {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 40vh;\n}\n</style>\n<script>\nimport {EventBus} from \"@/main\";\nimport {mixins} from \"../../mixins\";\nimport AdminBar from \"@/components/AdminBar.vue\";\n\nexport default {\n  name: \"AdminPanel\",\n  components: {AdminBar},\n  mixins: [mixins],\n  data: () => ({\n    showPwd: false,\n    valid: true,\n    admin: {\n      user: '',\n      password: ''\n    }\n  }),\n  created() {\n    if (this.isSessionSetted()) this.$router.push(`/cda-admin`);\n  },\n  methods: {\n    reset() {\n      this.$refs.adminForm.reset();\n    },\n    connect() {\n      if (!this.$refs.adminForm.validate()) return;\n      this.axios\n          .post(`/admin/login`,this.admin)\n          .then( res => {\n            if (res.status === 200){\n              EventBus.$emit('alert',{\n                color: 'green',\n                type: 'success',\n                msg: 'Credenciales correctas'\n              });\n              if (this.isSessionSetted()) this.removeSession();\n\n              this.saveSession(res.data);\n              setTimeout(\n                  this.$router.push(`/cda-admin`)\n                  ,1000);\n            }\n          })\n          .catch( e => {\n            EventBus.$emit('alert',{\n              color: 'red',\n              type: 'error',\n              msg: e.response.data.message\n            })\n          });\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}