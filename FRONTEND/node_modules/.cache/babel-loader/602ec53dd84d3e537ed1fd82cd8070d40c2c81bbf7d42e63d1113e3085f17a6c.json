{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { defineComponent } from \"vue\";\nimport PortfolioButtonsBar from \"@/components/portfolio/PortfolioButtonsBar.vue\";\nimport { mixins } from \"@/mixins/mixins\";\nimport { EventBus } from \"@/main\";\nimport PortfolioMainImg from \"@/components/portfolio/PortfolioMainImg.vue\";\nimport PortfolioLanguages from \"@/components/portfolio/PortfolioLanguages.vue\";\nimport PortfolioPhotosPC from \"@/components/portfolio/PortfolioPhotosPC.vue\";\nimport PortfolioPhotosMobile from \"@/components/portfolio/PortfolioPhotosMobile.vue\";\nimport PortfolioSkills from \"@/components/portfolio/PortfolioSkills.vue\";\nimport BackgroundTabs from \"@/constants/BackgroundTabs\";\nimport PortfolioFormation from \"@/components/portfolio/PortfolioFormation.vue\";\nimport PortfolioXp from \"@/components/portfolio/PortfolioXp.vue\";\nimport PortfolioAwards from \"@/components/portfolio/PortfolioAwards.vue\";\nexport default defineComponent({\n  name: \"ActorProfile\",\n  computed: {\n    BackgroundTabs() {\n      return BackgroundTabs;\n    }\n  },\n  mixins: [mixins],\n  components: {\n    PortfolioAwards,\n    PortfolioXp,\n    PortfolioFormation,\n    PortfolioSkills,\n    PortfolioPhotosMobile,\n    PortfolioPhotosPC,\n    PortfolioLanguages,\n    PortfolioMainImg,\n    PortfolioButtonsBar\n  },\n  data: () => ({\n    urlProfile: '',\n    urlSection: null,\n    tabsArray: [],\n    actor: {\n      actorName: '',\n      languages: [],\n      background: {}\n    },\n    personalData: {},\n    mainImg: {\n      publicId: '',\n      secureUrl: '',\n      url: ''\n    },\n    photos: [],\n    windowWith: 0\n  }),\n  methods: {\n    retrieveFullProfile() {\n      this.axios.get(`/full-profile/retrieve/${this.urlProfile}`).then(res => {\n        this.actor = res.data;\n        this.prepareMainImg(this.actor);\n        this.setCurrentTab(this.$route.params.section);\n      }).catch(e => {\n        console.log(e);\n        EventBus.$emit('alert', {\n          color: 'red',\n          type: 'error',\n          msg: e.response.data.message\n        });\n        this.$router.push(`/`);\n      });\n    },\n    setCurrentTab(urlSection) {\n      for (const bg of Object.keys(this.actor.background)) {\n        if (this.actor.background[bg].active) {\n          this.tabsArray.push({\n            bgName: BackgroundTabs[bg],\n            bgUrl: BackgroundTabs[bg].replace(/\\s/g, '-').toLowerCase()\n          });\n        }\n      }\n      if (urlSection !== undefined) {\n        this.urlSection = urlSection;\n        const tabIndex = this.tabsArray.findIndex(tab => tab.bgUrl == urlSection);\n        EventBus.$emit('toButtonsBar_actorProfile', parseInt(tabIndex + 1));\n      }\n    },\n    prepareMainImg(actor) {\n      actor.photos.forEach(ph => {\n        if (!ph.main) {\n          this.photos.push(ph);\n        } else {\n          EventBus.$emit('photosMobile_actorProfile_changeMainImg', ph.secureUrl);\n        }\n      });\n    },\n    onResize() {\n      this.windowWith = this.getWindowWidth();\n      this.isMobile = this.windowWith < 600;\n    }\n  },\n  created() {\n    this.urlProfile = this.$route.params.name;\n    this.retrieveFullProfile();\n    EventBus.$on('photosMobile_actorProfile_changeMainImg', secureUrl => {\n      this.mainImg = this.addFaceDetection(secureUrl);\n    });\n    EventBus.$on('changeSection_actorProfile', section => {\n      this.urlSection = section;\n    });\n  },\n  mounted() {\n    EventBus.$on('toButtonsBar_actorProfile', tabIndex => {\n      this.tab = tabIndex;\n    });\n    this.onResize();\n    window.addEventListener('resize', this.onResize, {\n      passive: true\n    });\n  },\n  beforeDestroy() {\n    if (typeof window === 'undefined') return;\n    window.removeEventListener('resize', this.onResize, {\n      passive: true\n    });\n  },\n  watch: {\n    mainImg: function (newImg) {\n      this.mainImg = newImg;\n    }\n  }\n});","map":{"version":3,"mappings":";AA8EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IACAC;MACA;IACA;EACA;EACAC;EACAC;IACAC;IACAC;IACAC;IACAC;IACAC;IAAAC;IAAAC;IAAAC;IAAAC;EAAA;EACAC;IACAC;IACAC;IACAC;IACAC;MACAC;MACAC;MACAC;IACA;IACAC;IACAC;MACAC;MACAC;MACAC;IACA;IACAC;IACAC;EACA;EACAC;IACAC;MACA,WACAC,iDACAC;QACA;QACA;QACA;MACA,GACAC;QACAC;QACAC;UACAC;UACAC;UACAC;QACA;QACA;MACA;IACA;IACAC;MACA;QACA;UACA;YACAC;YACAC;UACA;QACA;MACA;MACA;QACA;QACA;QACAN;MACA;IACA;IACAO;MACAxB;QACA;UACA;QACA;UACAiB,eACA,2CACAQ,aACA;QACA;MACA;IACA;IACAC;MACA;MACA;IACA;EACA;EACAC;IACA;IACA;IACAV,aACA,2CACAV;MACA;IACA,EACA;IACAU;MACA;IACA;EACA;EACAW;IACAX;MACA;IACA;IACA;IACAY;MAAAC;IAAA;EACA;EACAC;IACA;IACAF;MAAAC;IAAA;EACA;EACAE;IACA3B;MACA;IACA;EACA;AACA","names":["name","computed","BackgroundTabs","mixins","components","PortfolioAwards","PortfolioXp","PortfolioFormation","PortfolioSkills","PortfolioPhotosMobile","PortfolioPhotosPC","PortfolioLanguages","PortfolioMainImg","PortfolioButtonsBar","data","urlProfile","urlSection","tabsArray","actor","actorName","languages","background","personalData","mainImg","publicId","secureUrl","url","photos","windowWith","methods","retrieveFullProfile","get","then","catch","console","EventBus","color","type","msg","setCurrentTab","bgName","bgUrl","prepareMainImg","ph","onResize","created","mounted","window","passive","beforeDestroy","watch"],"sourceRoot":"src/views","sources":["ActorProfile.vue"],"sourcesContent":["<template>\n  <v-container fluid class=\"pa-0\">\n    <PortfolioButtonsBar\n        :actor-name=actor.name\n        :tabs-array=tabsArray\n    />\n    <v-row fill-height>\n      <v-col\n          sm=\"12\"\n          md=\"5\"\n          lg=\"4\"\n      >\n        <v-row>\n          <v-col\n              cols=\"12\"\n              class=\"d-flex justify-center\"\n          >\n            <PortfolioMainImg />\n          </v-col>\n          <v-col v-if=\"windowWith < 960 && (urlSection === actor.name || !urlSection)\" class=\"mt-n10\">\n            <PortfolioPhotosMobile\n                class=\"pa-4\"\n                :photos=photos\n            />\n          </v-col>\n          <v-col\n              cols=\"12\"\n              align=\"center\"\n          >\n            <v-btn\n                v-for=\"sm in actor.media\"\n                class=\"mx-6 mt-n9 mb-3\"\n                fab\n                small\n                elevation=\"0\"\n                outlined\n            >\n              <v-icon dark>\n                {{ sm.icon }}\n              </v-icon>\n            </v-btn>\n          </v-col>\n          <v-col\n              cols=\"12\"\n          >\n            <PortfolioLanguages\n                class=\"mt-n10\"\n                :langs=actor.languages\n            />\n          </v-col>\n          <v-col\n              cols=\"12\"\n          >\n            <PortfolioSkills\n                :skills=\"actor.skills\"\n            />\n          </v-col>\n        </v-row>\n      </v-col>\n      <v-col v-if=\"windowWith > 960 && (urlSection === actor.name || !urlSection)\">\n        <PortfolioPhotosPC\n            class=\"pa-4\"\n            :photos=photos\n        />\n      </v-col>\n      <v-col v-if=\"urlSection === BackgroundTabs['formation'].replace(/\\s/g, '-').toLowerCase()\">\n        <PortfolioFormation :formation=\"actor.background.formation\"/>\n      </v-col>\n      <v-col v-if=\"urlSection === BackgroundTabs['awards'].replace(/\\s/g, '-').toLowerCase()\">\n        <PortfolioAwards :awards=\"actor.background.awards\"></PortfolioAwards>\n      </v-col>\n      <v-col v-if=\"urlSection === BackgroundTabs['experience'].replace(/\\s/g, '-').toLowerCase()\">\n        <PortfolioXp :experience=\"actor.background.experience\"></PortfolioXp>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n<script>\nimport {defineComponent} from \"vue\";\nimport PortfolioButtonsBar from \"@/components/portfolio/PortfolioButtonsBar.vue\";\nimport {mixins} from \"@/mixins/mixins\";\nimport {EventBus} from \"@/main\";\nimport PortfolioMainImg from \"@/components/portfolio/PortfolioMainImg.vue\";\nimport PortfolioLanguages from \"@/components/portfolio/PortfolioLanguages.vue\";\nimport PortfolioPhotosPC from \"@/components/portfolio/PortfolioPhotosPC.vue\";\nimport PortfolioPhotosMobile from \"@/components/portfolio/PortfolioPhotosMobile.vue\";\nimport PortfolioSkills from \"@/components/portfolio/PortfolioSkills.vue\";\nimport BackgroundTabs from \"@/constants/BackgroundTabs\";\nimport PortfolioFormation from \"@/components/portfolio/PortfolioFormation.vue\";\nimport PortfolioXp from \"@/components/portfolio/PortfolioXp.vue\";\nimport PortfolioAwards from \"@/components/portfolio/PortfolioAwards.vue\";\n\nexport default defineComponent({\n  name: \"ActorProfile\",\n  computed: {\n    BackgroundTabs() {\n      return BackgroundTabs\n    }\n  },\n  mixins: [mixins],\n  components: {\n    PortfolioAwards,\n    PortfolioXp,\n    PortfolioFormation,\n    PortfolioSkills,\n    PortfolioPhotosMobile, PortfolioPhotosPC, PortfolioLanguages, PortfolioMainImg, PortfolioButtonsBar},\n  data: () => ({\n    urlProfile: '',\n    urlSection: null,\n    tabsArray: [],\n    actor: {\n      actorName: '',\n      languages: [],\n      background: {}\n    },\n    personalData: {},\n    mainImg: {\n      publicId: '',\n      secureUrl: '',\n      url: ''\n    },\n    photos: [],\n    windowWith: 0\n  }),\n  methods: {\n    retrieveFullProfile() {\n      this.axios\n          .get(`/full-profile/retrieve/${this.urlProfile}`)\n          .then(res => {\n            this.actor = res.data;\n            this.prepareMainImg(this.actor);\n            this.setCurrentTab(this.$route.params.section)\n          })\n          .catch(e => {\n            console.log(e)\n            EventBus.$emit('alert', {\n              color: 'red',\n              type: 'error',\n              msg: e.response.data.message\n            });\n            this.$router.push(`/`);\n          });\n    },\n    setCurrentTab(urlSection) {\n      for (const bg of Object.keys(this.actor.background)) {\n        if (this.actor.background[bg].active) {\n          this.tabsArray.push({\n            bgName: BackgroundTabs[bg],\n            bgUrl: BackgroundTabs[bg].replace(/\\s/g, '-').toLowerCase()\n          })\n        }\n      }\n      if (urlSection !== undefined) {\n        this.urlSection = urlSection;\n        const tabIndex = this.tabsArray.findIndex(tab => tab.bgUrl == urlSection);\n        EventBus.$emit('toButtonsBar_actorProfile', parseInt(tabIndex + 1));\n      }\n    },\n    prepareMainImg(actor) {\n      actor.photos.forEach(ph => {\n        if (!ph.main) {\n          this.photos.push(ph);\n        } else {\n          EventBus.$emit(\n              'photosMobile_actorProfile_changeMainImg'\n              ,ph.secureUrl\n          );\n        }\n      });\n    },\n    onResize () {\n      this.windowWith = this.getWindowWidth();\n      this.isMobile = this.windowWith < 600;\n    }\n  },\n  created() {\n    this.urlProfile = this.$route.params.name;\n    this.retrieveFullProfile();\n    EventBus.$on(\n        'photosMobile_actorProfile_changeMainImg',\n        (secureUrl) => {\n          this.mainImg = this.addFaceDetection(secureUrl);\n        }\n    );\n    EventBus.$on('changeSection_actorProfile', section => {\n      this.urlSection = section;\n    });\n  },\n  mounted() {\n    EventBus.$on('toButtonsBar_actorProfile', tabIndex => {\n      this.tab = (tabIndex)\n    });\n    this.onResize();\n    window.addEventListener('resize', this.onResize, { passive: true });\n  },\n  beforeDestroy () {\n    if (typeof window === 'undefined') return\n    window.removeEventListener('resize', this.onResize, { passive: true });\n  },\n  watch: {\n    mainImg: function (newImg) {\n      this.mainImg = newImg\n    }\n  }\n})\n</script>\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}