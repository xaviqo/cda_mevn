{"ast":null,"code":"import ActorEditDialog from \"@/components/ActorEditDialog.vue\";\nimport { EventBus } from \"@/main\";\nexport default {\n  name: \"ActorAdminActions\",\n  components: {\n    ActorEditDialog\n  },\n  props: {\n    actorActive: {\n      type: Boolean,\n      required: true\n    },\n    actorName: {\n      type: String,\n      required: true\n    },\n    actorId: {\n      type: String,\n      required: true\n    }\n  },\n  data: () => ({\n    actions: {\n      enable: {},\n      edit: {},\n      delete: {}\n    },\n    selectedActor: {\n      id: '',\n      name: '',\n      active: false\n    }\n  }),\n  created() {\n    this.selectedActor.id = this.actorId;\n    this.selectedActor.name = this.actorName;\n    this.selectedActor.active = this.actorActive;\n  },\n  methods: {\n    editActor(actor) {\n      EventBus.$emit('adminActions_actorEditDiag_adminPanel_editActor', this.selectedActor);\n    },\n    changeActorStatus(actor) {\n      this.axios.post(`/change-status/${actor.id}`).then(res => {\n        if (res.status === 200) {\n          EventBus.$emit('alert', {\n            color: 'green',\n            type: 'success',\n            msg: res.data.message\n          });\n          EventBus.$emit('toActorGallery_reloadGallery');\n        }\n        this.selectedActor.active = !this.selectedActor.active;\n      }).catch(e => {\n        EventBus.$emit('alert', {\n          color: 'red',\n          type: 'error',\n          msg: e.response.data.message\n        });\n      });\n    },\n    deleteActor(actor) {\n      this.axios.delete(`/delete/${actor.id}`).then(res => {\n        if (res.status === 200) {\n          EventBus.$emit('alert', {\n            color: 'green',\n            type: 'success',\n            msg: res.data.message\n          });\n          EventBus.$emit('toActorGallery_reloadGallery');\n        }\n      }).catch(e => {\n        EventBus.$emit('alert', {\n          color: 'red',\n          type: 'error',\n          msg: e.response.data.message\n        });\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAyCA;AACA;AAEA;EACAA;EACAC;IAAAC;EAAA;EACAC;IACAC;MACAC;MACAC;IACA;IACAC;MACAF;MACAC;IACA;IACAE;MACAH;MACAC;IACA;EACA;EACAG;IACAC;MACAC;MACAC;MACAC;IACA;IACAC;MACAC;MACAf;MACAgB;IACA;EACA;EACAC;IACA;IACA;IACA;EACA;EACAC;IACAC;MACAC;IACA;IACAC;MACA,WACAC,mCACAC;QACA;UACAH;YACAI;YACAnB;YACAoB;UACA;UACAL;QACA;QACA;MACA,GACAM;QACAN;UACAI;UACAnB;UACAoB;QACA;MACA;IACA;IACAE;MACA,WACAd,8BACAU;QACA;UACAH;YACAI;YACAnB;YACAoB;UACA;UACAL;QACA;MACA,GACAM;QACAN;UACAI;UACAnB;UACAoB;QACA;MACA;IACA;EACA;AACA","names":["name","components","ActorEditDialog","props","actorActive","type","required","actorName","actorId","data","actions","enable","edit","delete","selectedActor","id","active","created","methods","editActor","EventBus","changeActorStatus","post","then","color","msg","catch","deleteActor"],"sourceRoot":"src/components","sources":["ActorAdminActions.vue"],"sourcesContent":["<template>\n  <div>\n    <v-card\n    >\n      <v-card class=\"d-flex justify-lg-space-around pa-2 actionBgColor\" color=\"white\">\n        <v-btn\n            tile\n            out\n            icon\n            width=\"33%\"\n            class=\"mx-1\"\n            @click=editActor(selectedActor)\n        >\n          <v-icon>mdi-pencil-outline</v-icon>\n        </v-btn>\n        <v-divider vertical></v-divider>\n        <v-btn\n            tile\n            icon\n            width=\"33%\"\n            class=\"mx-1\"\n            @click=changeActorStatus(selectedActor)\n        >\n          <v-icon>{{selectedActor.active?'mdi-window-close':'mdi-check'}}</v-icon>\n        </v-btn>\n        <v-divider vertical></v-divider>\n        <v-btn\n            tile\n            icon\n            width=\"33%\"\n            class=\"mx-1\"\n            @click=deleteActor(selectedActor)\n        >\n          <v-icon>mdi-trash-can-outline</v-icon>\n        </v-btn>\n      </v-card>\n    </v-card>\n  </div>\n</template>\n\n<script>\nimport ActorEditDialog from \"@/components/ActorEditDialog.vue\";\nimport {EventBus} from \"@/main\";\n\nexport default {\n  name: \"ActorAdminActions\",\n  components: {ActorEditDialog},\n  props: {\n    actorActive: {\n      type: Boolean,\n      required: true\n    },\n    actorName: {\n      type: String,\n      required: true\n    },\n    actorId: {\n      type: String,\n      required: true\n    },\n  },\n  data: () => ({\n    actions: {\n      enable: {},\n      edit: {},\n      delete: {},\n    },\n    selectedActor: {\n      id: '',\n      name: '',\n      active: false\n    }\n  }),\n  created() {\n    this.selectedActor.id = this.actorId;\n    this.selectedActor.name = this.actorName;\n    this.selectedActor.active = this.actorActive;\n  },\n  methods: {\n    editActor(actor){\n      EventBus.$emit('adminActions_actorEditDiag_adminPanel_editActor',this.selectedActor);\n    },\n    changeActorStatus(actor){\n      this.axios\n          .post(`/change-status/${actor.id}`)\n          .then( res => {\n            if (res.status === 200){\n              EventBus.$emit('alert',{\n                color: 'green',\n                type: 'success',\n                msg: res.data.message\n              });\n              EventBus.$emit('toActorGallery_reloadGallery');\n            }\n            this.selectedActor.active = !this.selectedActor.active;\n          })\n          .catch( e => {\n            EventBus.$emit('alert',{\n              color: 'red',\n              type: 'error',\n              msg: e.response.data.message\n            })\n          });\n    },\n    deleteActor(actor){\n      this.axios\n          .delete(`/delete/${actor.id}`)\n          .then( res => {\n            if (res.status === 200){\n              EventBus.$emit('alert',{\n                color: 'green',\n                type: 'success',\n                msg: res.data.message\n              });\n              EventBus.$emit('toActorGallery_reloadGallery');\n            }\n          })\n          .catch( e => {\n            EventBus.$emit('alert',{\n              color: 'red',\n              type: 'error',\n              msg: e.response.data.message\n            })\n          });\n    }\n  }\n}\n</script>\n\n<style scoped>\n.actionBgColor {\n  background-color: rgba(224, 224, 224, .3) !important;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}