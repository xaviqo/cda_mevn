{"ast":null,"code":"import ActorAdminActions from \"@/components/ActorAdminActions.vue\";\nimport { EventBus } from \"@/main\";\nexport default {\n  name: \"ActorGallery\",\n  components: {\n    ActorAdminActions\n  },\n  props: {\n    admin: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: () => ({\n    actors: []\n  }),\n  created() {\n    this.getGallery();\n    EventBus.$on('toActorGallery_reloadGallery', this.getGallery);\n  },\n  methods: {\n    getGallery() {\n      this.axios.get(`/gallery`).then(res => {\n        this.actors = res.data;\n        this.actors.forEach(a => {\n          const url = a.photo.url;\n          const sUrl = a.photo.secureUrl;\n          this.addFaceDetection({\n            url,\n            sUrl\n          });\n        });\n      }).catch(e => console.log(e));\n    },\n    addFaceDetection(url) {\n      return url.replace('image/upload/', 'image/upload/g_face/');\n    },\n    showCard(actor) {\n      if (!this.admin) {\n        return actor.active;\n      }\n      return true;\n    }\n  }\n};","map":{"version":3,"mappings":"AAgDA;AACA;AAEA;EACAA;EACAC;IAAAC;EAAA;EACAC;IACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;EACA;EACAC;IACA;IACAC;EACA;EACAC;IACAC;MACA,WACAC,gBACAC;QACA;QACA;UACA;UACA;UACA;YAAAC;YAAAC;UAAA;QACA;MACA,GACAC;IACA;IACAC;MACA;IACA;IACAC;MACA;QACA;MACA;MACA;IACA;EACA;AACA","names":["name","components","ActorAdminActions","props","admin","type","default","data","actors","created","EventBus","methods","getGallery","get","then","url","sUrl","catch","addFaceDetection","showCard"],"sourceRoot":"src/components","sources":["ActorGallery.vue"],"sourcesContent":["<template>\n  <v-row class=\"pa-8\">\n    <template\n        v-if=\"actors.length > 0\"\n        v-for=\"a in actors\"\n    >\n      <v-col\n          v-if=\"showCard(a)\"\n          :key=\"a._id\"\n          class=\"d-flex justify-center child-flex\"\n      >\n        <v-card\n            outlined\n            class=\"pa-1\"\n            max-width=\"315px\">\n            <v-img\n                :key=a.photo.publicId\n                :src=a.photo.secureUrl\n                aspect-ratio=\"1\"\n                class=\"grey lighten-2 actorImg align-end\"\n            >\n              <template v-slot:placeholder>\n                <v-row\n                    class=\"fill-height ma-0\"\n                    align=\"center\"\n                    justify=\"center\"\n                >\n                  <v-progress-circular\n                      indeterminate\n                      color=\"grey lighten-5\"\n                  ></v-progress-circular>\n                </v-row>\n              </template>\n              <div class=\"showName text-center\">\n                {{ a.name }}\n              </div>\n              <div v-if=\"admin\">\n                <ActorAdminActions :actor-id=a._id :actor-name=a.name :actor-active=a.active>\n                </ActorAdminActions>\n              </div>\n            </v-img>\n        </v-card>\n      </v-col>\n    </template>\n  </v-row>\n</template>\n\n<script>\nimport ActorAdminActions from \"@/components/ActorAdminActions.vue\";\nimport {EventBus} from \"@/main\";\n\nexport default {\n  name: \"ActorGallery\",\n  components: {ActorAdminActions},\n  props: {\n    admin: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: () => ({\n    actors: []\n  }),\n  created() {\n    this.getGallery();\n    EventBus.$on('toActorGallery_reloadGallery', this.getGallery);\n  },\n  methods: {\n    getGallery(){\n      this.axios\n          .get(`/gallery`)\n          .then( res => {\n            this.actors = res.data;\n            this.actors.forEach( a => {\n              const url = a.photo.url;\n              const sUrl = a.photo.secureUrl;\n              this.addFaceDetection({ url, sUrl });\n            });\n          } )\n          .catch( e => console.log(e) );\n    },\n    addFaceDetection(url) {\n      return url.replace('image/upload/', 'image/upload/g_face/');\n    },\n    showCard(actor){\n      if (!this.admin){\n        return actor.active;\n      }\n      return true;\n    }\n  }\n}\n</script>\n\n<style scoped>\n.actorImg {\n  transition: opacity 0.4s ease-in-out;\n  cursor: pointer;\n}\n\n.actorImg:hover {\n  opacity: 0.95;\n}\n.showName{\n  color: white;\n  background-color: rgba(0, 0, 0, 0.6);\n  height: 42px;\n  transition: opacity 0.4s ease-in-out;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.actorImg:hover .showName {\n  background-color: rgba(0, 0, 0, 0.3);\n  opacity: 0.8;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}