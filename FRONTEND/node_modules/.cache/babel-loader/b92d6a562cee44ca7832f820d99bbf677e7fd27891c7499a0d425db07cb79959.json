{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { EventBus } from \"@/main\";\nexport default {\n  name: \"ActorEditBackground\",\n  data: () => ({\n    activeTab: 0,\n    newBg: {\n      date: '',\n      exp: '',\n      category: ''\n    },\n    labels: {\n      date: '',\n      exp: ''\n    },\n    backgrounds: [{\n      schemaName: 'formation',\n      name: 'Formación',\n      icon: 'mdi-school',\n      active: false,\n      categories: [],\n      values: []\n    }, {\n      schemaName: 'experience',\n      name: 'Experiencia Profesional',\n      icon: 'mdi-movie-open',\n      active: false,\n      categories: [],\n      values: []\n    }, {\n      schemaName: 'awards',\n      name: 'Premios',\n      icon: 'mdi-trophy-award',\n      active: false,\n      categories: [],\n      values: []\n    }]\n  }),\n  props: {\n    actorId: {\n      type: String,\n      required: true\n    }\n  },\n  watch: {\n    actorId: {\n      handler: function () {\n        this.retrieveBackgroundInfo();\n      }\n    }\n  },\n  methods: {\n    save() {\n      const actor = {\n        background: {}\n      };\n      this.backgrounds.forEach(bg => {\n        if (bg.values.length > 0) {\n          actor.background[bg.schemaName] = {\n            values: bg.values,\n            categories: bg.categories,\n            active: bg.active\n          };\n        }\n      });\n      if (Object.keys(actor).length < 1) {\n        EventBus.$emit('alert', {\n          color: 'red',\n          type: 'error',\n          msg: 'No se ha añadido ninguna experiencia'\n        });\n        return;\n      }\n      EventBus.$emit('toActorEditionForm_save', actor);\n    },\n    addNewData(tab) {\n      if (!this.checkAllInputs()) {\n        EventBus.$emit('alert', {\n          color: 'red',\n          type: 'error',\n          msg: 'Los campos no pueden estar vacíos'\n        });\n      } else {\n        this.backgrounds[tab].values.push(this.newBg);\n      }\n      this.changeActiveTab(tab);\n    },\n    checkAllInputs() {\n      return this.newBg.category && this.newBg.exp && this.newBg.date;\n    },\n    removeExperience(tab, index) {\n      this.backgrounds[tab].values.splice(index, 1);\n    },\n    changeActiveTab(i) {\n      this.labels = {\n        date: `Fecha de ` + this.backgrounds[i].name.toLowerCase(),\n        exp: this.backgrounds[i].name\n      };\n      this.newBg = {\n        date: '',\n        exp: ''\n      };\n      this.activeTab = i;\n    },\n    retrieveBackgroundInfo() {\n      this.axios.get(`/experience/retrieve/${this.actorId}`).then(res => {\n        this.backgrounds.forEach(bg => {\n          bg.active = res.data.background[bg.schemaName].active;\n          bg.values = res.data.background[bg.schemaName].values;\n          bg.categories = res.data.background[bg.schemaName].categories;\n        });\n      }).catch(e => {\n        EventBus.$emit('alert', {\n          color: 'red',\n          type: 'error',\n          msg: e.response.data.message\n        });\n      });\n    }\n  },\n  created() {\n    this.changeActiveTab(0);\n    this.retrieveBackgroundInfo();\n    EventBus.$on('actorEditionForm_actorEditBackground_save', this.save);\n  }\n};","map":{"version":3,"mappings":";AAiJA;AAEA;EACAA;EACAC;IACAC;IACAC;MACAC;MACAC;MACAC;IACA;IACAC;MACAH;MACAC;IACA;IACAG,cACA;MACAC;MACAT;MACAU;MACAC;MACAC;MACAC;IACA,GACA;MACAJ;MACAT;MACAU;MACAC;MACAC;MACAC;IACA,GACA;MACAJ;MACAT;MACAU;MACAC;MACAC;MACAC;IACA;EAEA;EACAC;IACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAH;MACAI;QACA;MACA;IACA;EACA;EACAC;IACAC;MACA;QAAAC;MAAA;MAEA;QACA;UACAC;YACAV;YACAD;YACAD;UACA;QACA;MACA;MAEA;QACAa;UACAC;UACAT;UACAU;QACA;QACA;MACA;MAEAF;IACA;IACAG;MACA;QACAH;UACAC;UACAT;UACAU;QACA;MACA;QACA;MACA;MACA;IACA;IACAE;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;QACA1B;QACAC;MACA;MACA;QACAD;QACAC;MACA;MACA;IACA;IACA0B;MACA,WACAC,4CACAC;QACA;UACAC;UACAA;UACAA;QACA;MACA,GACAC;QACAX;UACAC;UACAT;UACAU;QACA;MACA;IACA;EACA;EACAU;IACA;IACA;IACAZ,0DACA,UACA;EACA;AACA","names":["name","data","activeTab","newBg","date","exp","category","labels","backgrounds","schemaName","icon","active","categories","values","props","actorId","type","required","watch","handler","methods","save","background","actor","EventBus","color","msg","addNewData","checkAllInputs","removeExperience","changeActiveTab","retrieveBackgroundInfo","get","then","bg","catch","created"],"sourceRoot":"src/components/forms","sources":["ActorEditBackground.vue"],"sourcesContent":["<template>\n  <v-row>\n    <v-col>\n      <v-list\n      >\n        <v-tabs\n            fixed-tabs\n            hide-slider\n            class=\"mt-1\"\n        >\n          <v-tab\n              v-for=\"(bg, i) in backgrounds\"\n              :key=bg.name\n              class=\"mb-2\"\n              :class=\"{ active: activeTab === i}\"\n              @click=changeActiveTab(i)\n          >\n            <v-subheader\n                class=\"mt-2\"\n            >\n              <v-icon\n                  class=\"mr-4\"\n                  v-if=\"activeTab === i\"\n              >\n                {{ bg.icon }}\n              </v-icon>\n              {{ bg.name }}\n              <v-tooltip\n                  bottom\n              >\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <div\n                      v-bind=\"attrs\"\n                      v-on=\"on\"\n                  >\n                    <v-switch\n                        v-if=\"activeTab === i\"\n                        class=\"ml-4\"\n                        color=\"grey darken-3\"\n                        v-model=\"bg.active\"\n                    ></v-switch>\n                  </div>\n                </template>\n                <span>{{ bg.active?'Desactivar':'Activar' }}</span>\n              </v-tooltip>\n            </v-subheader>\n          </v-tab>\n        </v-tabs>\n      </v-list>\n      <v-divider></v-divider>\n      <v-list>\n        <v-row class=\"pr-12 pl-9 pt-3\">\n          <v-combobox\n              prepend-icon=\"mdi-shape-outline\"\n              label=\"Añadir categoría\"\n              v-model=backgrounds[activeTab].categories\n              multiple\n              chips\n          ></v-combobox>\n        </v-row>\n      </v-list>\n      <v-list\n          subheader\n      >\n        <v-row class=\"px-6\">\n          <v-col cols=\"3\">\n            <v-select\n                prepend-icon=\"mdi-shape-outline\"\n                label=\"Categoría\"\n                v-model=newBg.category\n                :items=backgrounds[activeTab].categories\n            ></v-select>\n          </v-col>\n          <v-col cols=\"3\">\n            <v-text-field\n                prepend-icon=\"mdi-calendar-range\"\n                :label=labels.date\n                v-model=newBg.date\n            ></v-text-field>\n          </v-col>\n          <v-col cols=\"5\">\n            <v-text-field\n                prepend-icon=\"mdi-information-outline\"\n                :label=labels.exp\n                v-model=newBg.exp\n            ></v-text-field>\n          </v-col>\n          <v-col\n            class=\"d-flex justify-center align-center\"\n          >\n            <v-btn\n                small\n                icon\n                outlined\n                @click=addNewData(activeTab)\n            >\n              <v-icon>\n                mdi-plus\n              </v-icon>\n            </v-btn>\n          </v-col>\n        </v-row>\n      </v-list>\n      <v-list v-if=\"backgrounds[activeTab].values.length > 0\">\n        <template\n            v-for=\"category in backgrounds[activeTab].categories\"\n        >\n          <v-subheader>{{ category.toUpperCase() }}</v-subheader>\n        <v-divider></v-divider>\n        <template\n            v-for=\"(val,i) in backgrounds[activeTab].values\"\n        >\n          <v-list-item\n              v-if=\"val.category === category\"\n              :key=\"val.exp\"\n          >\n            <v-list-item-icon>\n              <v-icon class=\"ml-4 mt-1\">{{ backgrounds[activeTab].icon }}</v-icon>\n            </v-list-item-icon>\n            <v-list-item-content>\n              <v-list-item-title>{{ val.exp }}</v-list-item-title>\n              <v-list-item-subtitle>{{ val.date }}</v-list-item-subtitle>\n            </v-list-item-content>\n            <v-list-item-action>\n              <v-btn\n                  small\n                  icon\n                  outlined\n                  class=\"mt-2\"\n                  @click=removeExperience(activeTab,i)\n              >\n                <v-icon>\n                  mdi-close\n                </v-icon>\n              </v-btn>\n            </v-list-item-action>\n          </v-list-item>\n          </template>\n        </template>\n      </v-list>\n    </v-col>\n  </v-row>\n</template>\n\n<script>\nimport {EventBus} from \"@/main\";\n\nexport default {\n  name: \"ActorEditBackground\",\n  data: () => ({\n    activeTab: 0,\n    newBg: {\n      date: '',\n      exp: '',\n      category: ''\n    },\n    labels:{\n      date: '',\n      exp: '',\n    },\n    backgrounds: [\n      {\n        schemaName: 'formation',\n        name: 'Formación',\n        icon: 'mdi-school',\n        active: false,\n        categories: [],\n        values: []\n      },\n      {\n        schemaName: 'experience',\n        name: 'Experiencia Profesional',\n        icon: 'mdi-movie-open',\n        active: false,\n        categories: [],\n        values: []\n      },\n      {\n        schemaName: 'awards',\n        name: 'Premios',\n        icon: 'mdi-trophy-award',\n        active: false,\n        categories: [],\n        values: []\n      },\n    ]\n  }),\n  props: {\n    actorId: {\n      type: String,\n      required: true\n    },\n  },\n  watch: {\n    actorId: {\n      handler: function () {\n        this.retrieveBackgroundInfo();\n      }\n    }\n  },\n  methods:{\n    save(){\n      const actor = { background: {} };\n\n      this.backgrounds.forEach( bg => {\n        if (bg.values.length > 0){\n          actor.background[bg.schemaName] = {\n            values: bg.values,\n            categories: bg.categories,\n            active: bg.active\n          };\n        }\n      })\n\n      if (Object.keys(actor).length < 1) {\n        EventBus.$emit('alert',{\n          color: 'red',\n          type: 'error',\n          msg: 'No se ha añadido ninguna experiencia'\n        });\n        return;\n      }\n\n      EventBus.$emit('toActorEditionForm_save',actor);\n    },\n    addNewData(tab){\n      if (!this.checkAllInputs()) {\n          EventBus.$emit('alert',{\n              color: 'red',\n              type: 'error',\n              msg: 'Los campos no pueden estar vacíos'\n          });\n      } else {\n          this.backgrounds[tab].values.push(this.newBg);\n      }\n        this.changeActiveTab(tab);\n    },\n    checkAllInputs(){\n      return (this.newBg.category && this.newBg.exp && this.newBg.date);\n    },\n    removeExperience(tab,index){\n      this.backgrounds[tab].values.splice(index,1);\n    },\n    changeActiveTab(i){\n      this.labels = {\n        date: `Fecha de `+this.backgrounds[i].name.toLowerCase(),\n        exp: this.backgrounds[i].name\n      }\n      this.newBg = {\n        date: '',\n        exp: ''\n      };\n      this.activeTab = i;\n    },\n    retrieveBackgroundInfo(){\n      this.axios\n          .get(`/experience/retrieve/${this.actorId}`)\n          .then( res => {\n            this.backgrounds.forEach( bg => {\n              bg.active = res.data.background[bg.schemaName].active;\n              bg.values = res.data.background[bg.schemaName].values;\n              bg.categories = res.data.background[bg.schemaName].categories;\n            });\n          })\n          .catch( e => {\n            EventBus.$emit('alert',{\n              color: 'red',\n              type: 'error',\n              msg: e.response.data.message\n            });\n          });\n    }\n  },\n  created() {\n    this.changeActiveTab(0);\n    this.retrieveBackgroundInfo();\n    EventBus.$on('actorEditionForm_actorEditBackground_save',\n        this.save\n    );\n  }\n}\n</script>\n\n<style scoped>\n.v-tab {\n  border-left: 1px solid rgba(0, 0, 0, .1);\n  border-right: 1px solid rgba(0, 0, 0, .1);\n}\n.v-tab--active {\n  text-shadow: 0 0 1px rgba(0, 0, 0, .4);\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}